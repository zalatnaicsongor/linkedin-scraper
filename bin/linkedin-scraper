#!/usr/bin/env ruby
require 'io/console'
require 'net/http'
require 'uri'
require 'cgi'
require 'set'

require_relative '../lib/linkedin-scraper'
#profile = Linkedin::Profile.new(ARGV[0])
#puts JSON.pretty_generate JSON.parse(profile.to_json)

print 'Linkedin Username: '
username = gets.chomp
print 'Linkedin Password: '
password = STDIN.noecho(&:gets)
puts ''
puts 'please wait until the processing has completed and please do not close the browser!'

second_pass_connections = []

second_level_connections = Set.new

browser = Linkedin::HTTPClientFactory.create_authencticated_browser(username, password)

access_token_cookie = (browser.cookies.to_a.select { |cookie| cookie[:name] == "li_at" })

mechanize = Mechanize.new

me = Linkedin::Profile.me(browser, access_token_cookie[0][:value])
File.open("self/" + me.id.to_s + ".json", 'w') { |file| file.write(me.to_json) }

i = 0
me.connections.each do |connection|
	if connection[:connection_id] == 11222330 then
		next
	end
	other = Linkedin::Profile.get_first_degree(browser, connection[:connection_id], access_token_cookie[0][:value])
	File.open("1degree/" + other.id.to_s + ".json", 'w') { |file| file.write(other.to_json) }
	puts "processed degree 1 " + other.id.to_s
	other.connections.each do |secondLevel|
		if not me.connections.include? secondLevel then
			second_pass_connections << secondLevel
		end
	end
	i = i + 1
end

second_pass_connections.each do |second_pass_connection|
	if second_pass_connection[:degree] == 2 then
		second_level_connections.add(second_pass_connection[:connection_id])
		i = i + 1
	end
end

puts "--------- FIRST DEGREE DONE --------"

somefile = File.open("second_degree_ids.txt", "w")

second_level_connections.each do |second_level_connection|
	#other2 = Linkedin::Profile.get_second_degree(browser, second_level_connection, access_token_cookie[0][:value])
	#File.open("2degree/" + other2.id.to_s + ".json", 'w') { |file| file.write(other2.to_json) }
	#puts "processed degree 2 " + other2.id.to_s
	somefile.puts second_level_connection
end

somefile.close

puts "=======DONE======= " + i.to_s